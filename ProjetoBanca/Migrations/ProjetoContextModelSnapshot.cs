// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoBanca.DAO;

namespace ProjetoBanca.Migrations
{
    [DbContext(typeof(ProjetoContext))]
    partial class ProjetoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoBanca.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Login", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int>("PessoaFisicaID");

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("PessoaFisicaID")
                        .IsUnique();

                    b.ToTable("Login");
                });

            modelBuilder.Entity("ProjetoBanca.Models.PessoaFisica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<string>("Complemento");

                    b.Property<string>("DataNascimento")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("NumeroLogradouro");

                    b.Property<int>("Pontos");

                    b.Property<string>("Rua");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("TipoID");

                    b.HasKey("ID");

                    b.HasIndex("TipoID");

                    b.ToTable("PessoaFisica");
                });

            modelBuilder.Entity("ProjetoBanca.Models.PessoaJuridica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<string>("Complemento");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("NumeroLogradouro");

                    b.Property<int>("Preco");

                    b.Property<string>("Rua");

                    b.HasKey("ID");

                    b.ToTable("PessoaJuridica");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaID");

                    b.Property<int>("FornecedorID");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<double>("Preco");

                    b.Property<int>("Quantidade");

                    b.Property<string>("Unidade")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("FornecedorID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjetoBanca.Models.ProdutoVendas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProdutoID");

                    b.Property<int>("VendaID");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoID");

                    b.HasIndex("VendaID");

                    b.ToTable("ProdutoVendas");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Promocao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Desconto");

                    b.Property<string>("Descricao");

                    b.Property<int>("ProdutoID");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoID")
                        .IsUnique();

                    b.ToTable("Promocao");
                });

            modelBuilder.Entity("ProjetoBanca.Models.TipoUsuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Vendas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<double>("PrecoTotal");

                    b.Property<int>("Quantidade");

                    b.HasKey("ID");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Login", b =>
                {
                    b.HasOne("ProjetoBanca.Models.PessoaFisica", "PessoaFisica")
                        .WithOne("Login")
                        .HasForeignKey("ProjetoBanca.Models.Login", "PessoaFisicaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoBanca.Models.PessoaFisica", b =>
                {
                    b.HasOne("ProjetoBanca.Models.TipoUsuario", "Tipo")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoBanca.Models.Produto", b =>
                {
                    b.HasOne("ProjetoBanca.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoBanca.Models.PessoaJuridica", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoBanca.Models.ProdutoVendas", b =>
                {
                    b.HasOne("ProjetoBanca.Models.Produto", "Produto")
                        .WithMany("Vendas")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoBanca.Models.Vendas", "Venda")
                        .WithMany("Produtos")
                        .HasForeignKey("VendaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoBanca.Models.Promocao", b =>
                {
                    b.HasOne("ProjetoBanca.Models.Produto", "Produto")
                        .WithOne("Promocao")
                        .HasForeignKey("ProjetoBanca.Models.Promocao", "ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
